require 'rake/clean'

## Default target - targets are "site", "book"

task :default => [:site]

## Filesets

SITE		= "site/%n.html"
BOOK		= "book/%n.html"

YML_SRC		= FileList['src/*.yml']

SITE_INDICES	= FileList['index_alpha.ham','index_type.ham'].pathmap("tmp/%p")
SITE_STATIC	= FileList['static/*.ham']
SITE_OUT	= (YML_SRC).pathmap(SITE)

BOOK_INDICES	= FileList['book.ham'].pathmap("tmp/%p")
BOOK_OUT	= (YML_SRC).pathmap("book/%n.html")

CLEAN.include('tmp/*')

## Helpers

def haml_indirect target, where, built
	task target => built
        from = built.pathmap("%{#{where},tmp}X_#{where}.ham")
        haml built, from
end

def haml built, from
	file built => from do
          sh "haml -r lib/helpers.rb #{from} > #{built}" unless uptodate?(built,from)
        end
end

def generate_indices which, how
  uptodate = which.select {|each| !uptodate?(each,YML_SRC)}.empty?
  sh "ruby lib/#{how}.rb" unless uptodate
end

def mustache built, from, template
	file built => from do
          sh "mustache #{from} views/#{template}.tmpl > #{built}" unless uptodate?(built,from)
        end
end

## Synthetic tasks

SITE_OUT.each do |built|
  haml_indirect(:site,"site",built)
end

BOOK_OUT.each do |built|
  haml_indirect(:book,"book",built)
end

SITE_STATIC.each do |from|
  built = from.pathmap(SITE)
  task :site => built
  haml built, from
end

SITE_INDICES.each do |from|
  task from => :site_index
  built = from.pathmap(SITE)
  task :site => built
  haml built, from
end

BOOK_INDICES.each do |from|
  task from => :book_index
  built = from.pathmap(BOOK)
  task :book => built
  haml built, from
end

YML_SRC.each do |from|
        built = from.pathmap("%{src,tmp}X_book.ham")
        mustache built, from, "practice-book"
end

YML_SRC.each do |from|
        built = from.pathmap("%{src,tmp}X_site.ham")
        mustache built, from, "practice"
end

## Final tasks

file "eBook.pdf" => :book do
  sh "prince book/book.html -o eBook.pdf"
end

task :site => :site_index
task :book => :book_index

task :site_index => [] do |t|
  generate_indices SITE_INDICES, "site"
end

task :book_index => [] do |t|
  generate_indices BOOK_INDICES, "book"
end
